buildscript {
	ext {
		versions = [
				lombok: '1.18.12',
				springBoot: '2.3.2.RELEASE',
				springDependencyManagement: '1.0.9.RELEASE',
				springCloudVersion: 'Hoxton.SR6',
				springCloudStarterVersion: '2.2.4.RELEASE',
				springCloudStreamVersion: '3.0.7.RELEASE',
				jackson: '2.11.2',
				mysqlConnector: '8.0.21',
				commonLang3: '3.11'
		]
	}
	repositories {
		mavenCentral()
		maven { url "https://repo1.maven.org/maven2/" }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
		classpath 'io.franzbecker:gradle-lombok:1.14'
	}
}

subprojects {
	group "me.phoboslabs.lecture.${it.path.replaceFirst(':', '').replaceAll(':', '.')}"
	version = '0.0.1'

	allprojects {
		apply plugin: 'io.franzbecker.gradle-lombok'
		apply plugin: 'org.springframework.boot'
		apply plugin: 'io.spring.dependency-management'
		apply plugin: 'java'
		apply plugin: 'java-library'
	}

	wrapper {
		gradleVersion = "6.4.1"
		distributionUrl = distributionUrl.replace("bin", "all")
	}

	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11

	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

	repositories {
		mavenCentral()
		maven { url "https://repo1.maven.org/maven2/" }
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencyManagement {
		imports {
			mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloudVersion}"
		}

		dependencies {
			dependency "org.projectlombok:lombok:${versions.lombok}"

			// springboot
			dependency "org.springframework.boot:spring-boot-starter-web:${versions.springBoot}"
			dependency "org.springframework.boot:spring-boot-starter-actuator:${versions.springBoot}"
			dependency "org.springframework.boot:spring-boot-starter-data-jpa:${versions.springBoot}"

			// spring cloud
			dependency "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${versions.springCloudStarterVersion}"
			dependency "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${versions.springCloudStarterVersion}"
			dependency "org.springframework.cloud:spring-cloud-starter-openfeign:${versions.springCloudStarterVersion}"

			// spring cloud stream
//			dependency "org.springframework.cloud:spring-cloud-stream:${versions.springCloudStreamVersion}"
			dependency "org.springframework.cloud:spring-cloud-starter-stream-rabbit:${versions.springCloudStreamVersion}"
			dependency "org.springframework.cloud:spring-cloud-starter-stream-kafka:${versions.springCloudStreamVersion}"

			// jackson
			dependency "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
			dependency "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"

			// mysql
			dependency "mysql:mysql-connector-java:${versions.mysqlConnector}"

			// apache common
			dependency "org.apache.commons:commons-lang3:${versions.commonLang3}"

		}
	}

	dependencies {
		annotationProcessor("org.projectlombok:lombok")
		compileOnly 'org.projectlombok:lombok'
	}

	lombok {
		version = versions.lombok
		sha256 = ""
	}

	tasks.withType(JavaCompile) {
		options.encoding = 'UTF-8'
	}

	tasks.bootJar {
		enabled = true
	}
}